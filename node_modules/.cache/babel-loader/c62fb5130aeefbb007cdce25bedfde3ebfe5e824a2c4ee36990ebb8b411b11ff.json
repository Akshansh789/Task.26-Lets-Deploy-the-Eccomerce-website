{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaha\\\\Downloads\\\\react-bootstrap-ecomm\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MoviesList from './Components/MovieList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const fetchMoviesHandler = useCallback(async function () {\n    setError(null);\n    try {\n      setLoading(true);\n      let response = await fetch('https://swapi.dev/api/films/');\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...Retrying!\");\n      }\n      response = await response.json();\n      const transformedMovies = response.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), !loading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), !loading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies Found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 52\n      }, this), !loading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ukHU38Id6QPjXE3QMUJwvp4rSF8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","loading","setLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","role","length","_c","$RefreshReg$"],"sources":["C:/Users/chaha/Downloads/react-bootstrap-ecomm/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport MoviesList from './Components/MovieList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMoviesHandler=useCallback( async function() {\n    setError(null)\n    try {\n      setLoading(true);\n      let response = await fetch('https://swapi.dev/api/films/');\n      if(!response.ok){\n        throw new Error(\"Something went wrong...Retrying!\");\n      }\n      response = await response.json();\n      const transformedMovies = response.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        }\n      })\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  },[]);\n\n\n  useEffect(()=>{\n      fetchMoviesHandler();\n  },[fetchMoviesHandler])\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {loading && <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>}\n       {!loading && <MoviesList movies={movies} />}\n       {!loading && movies.length===0 && !error && <p>No Movies Found.</p>}\n       {!loading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}