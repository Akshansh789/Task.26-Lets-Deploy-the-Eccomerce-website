{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaha\\\\Downloads\\\\react-bootstrap-ecomm\\\\src\\\\Component\\\\Store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(cartItem => cartItem.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        quantity: existingCartItem.quantity + 1,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      const newItem = {\n        ...action.item,\n        quantity: 1\n      };\n      updatedItems = state.items.concat(newItem);\n    }\n    const updatedTotalAmount = state.totalAmount + action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(cartItem => cartItem.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingItem.quantity === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        quantity: existingItem.quantity - 1,\n        amount: existingItem.amount - existingItem.amount / existingItem.quantity\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    const updatedTotalAmount = state.totalAmount - existingItem.amount / existingItem.quantity;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"UPDATE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(cartItem => cartItem.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedItem = {\n      ...existingItem,\n      quantity: action.quantity,\n      amount: existingItem.amount / existingItem.quantity * action.quantity\n    };\n    const updatedItems = [...state.items];\n    updatedItems[existingCartItemIndex] = updatedItem;\n    const updatedTotalAmount = state.items.reduce((acc, item) => acc + item.amount, 0);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n  const updateQuantity = (id, quantity) => {\n    dispatchCartAction({\n      type: \"UPDATE_ITEM\",\n      id: id,\n      quantity: quantity\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n    updateQuantity: updateQuantity\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","cartItem","id","item","existingCartItem","updatedItems","updatedItem","quantity","amount","newItem","concat","updatedTotalAmount","existingItem","filter","reduce","acc","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCart","removeItemFromCart","updateQuantity","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chaha/Downloads/react-bootstrap-ecomm/src/Component/Store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (cartItem) => cartItem.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        quantity: existingCartItem.quantity + 1,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      const newItem = {\n        ...action.item,\n        quantity: 1,\n      };\n      updatedItems = state.items.concat(newItem);\n    }\n    const updatedTotalAmount = state.totalAmount + action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (cartItem) => cartItem.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n\n    if (existingItem.quantity === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        quantity: existingItem.quantity - 1,\n        amount:\n          existingItem.amount - existingItem.amount / existingItem.quantity,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    const updatedTotalAmount =\n      state.totalAmount - existingItem.amount / existingItem.quantity;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"UPDATE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (cartItem) => cartItem.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedItem = {\n      ...existingItem,\n      quantity: action.quantity,\n      amount: (existingItem.amount / existingItem.quantity) * action.quantity,\n    };\n    const updatedItems = [...state.items];\n    updatedItems[existingCartItemIndex] = updatedItem;\n    const updatedTotalAmount = state.items.reduce(\n      (acc, item) => acc + item.amount,\n      0\n    );\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCart = (item) => {\n    dispatchCartAction({ type: \"ADD_ITEM\", item: item });\n  };\n\n  const removeItemFromCart = (id) => {\n    dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\n  };\n\n  const updateQuantity = (id, quantity) => {\n    dispatchCartAction({ type: \"UPDATE_ITEM\", id: id, quantity: quantity });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n    updateQuantity: updateQuantity,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,MAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAK,CAACO,SAAS,CAChDC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKL,MAAM,CAACM,IAAI,CAACD,EAAE,CAC7C;IACD,MAAME,gBAAgB,GAAGR,KAAK,CAACH,KAAK,CAACM,qBAAqB,CAAC;IAC3D,IAAIM,YAAY;IAChB,IAAID,gBAAgB,EAAE;MACpB,MAAME,WAAW,GAAG;QAClB,GAAGF,gBAAgB;QACnBG,QAAQ,EAAEH,gBAAgB,CAACG,QAAQ,GAAG,CAAC;QACvCC,MAAM,EAAEJ,gBAAgB,CAACI,MAAM,GAAGX,MAAM,CAACM,IAAI,CAACK;MAChD,CAAC;MACDH,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAK,CAAC;MAC/BY,YAAY,CAACN,qBAAqB,CAAC,GAAGO,WAAW;IACnD,CAAC,MAAM;MACL,MAAMG,OAAO,GAAG;QACd,GAAGZ,MAAM,CAACM,IAAI;QACdI,QAAQ,EAAE;MACZ,CAAC;MACDF,YAAY,GAAGT,KAAK,CAACH,KAAK,CAACiB,MAAM,CAACD,OAAO,CAAC;IAC5C;IACA,MAAME,kBAAkB,GAAGf,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACM,IAAI,CAACK,MAAM;IACjE,OAAO;MACLf,KAAK,EAAEY,YAAY;MACnBX,WAAW,EAAEiB;IACf,CAAC;EACH;EACA,IAAId,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACjC,MAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAK,CAACO,SAAS,CAChDC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKL,MAAM,CAACK,EAAE,CACxC;IACD,MAAMU,YAAY,GAAGhB,KAAK,CAACH,KAAK,CAACM,qBAAqB,CAAC;IAEvD,IAAIM,YAAY;IAEhB,IAAIO,YAAY,CAACL,QAAQ,KAAK,CAAC,EAAE;MAC/BF,YAAY,GAAGT,KAAK,CAACH,KAAK,CAACoB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKL,MAAM,CAACK,EAAE,CAAC;IACpE,CAAC,MAAM;MACL,MAAMI,WAAW,GAAG;QAClB,GAAGM,YAAY;QACfL,QAAQ,EAAEK,YAAY,CAACL,QAAQ,GAAG,CAAC;QACnCC,MAAM,EACJI,YAAY,CAACJ,MAAM,GAAGI,YAAY,CAACJ,MAAM,GAAGI,YAAY,CAACL;MAC7D,CAAC;MACDF,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAK,CAAC;MAC/BY,YAAY,CAACN,qBAAqB,CAAC,GAAGO,WAAW;IACnD;IACA,MAAMK,kBAAkB,GACtBf,KAAK,CAACF,WAAW,GAAGkB,YAAY,CAACJ,MAAM,GAAGI,YAAY,CAACL,QAAQ;IACjE,OAAO;MACLd,KAAK,EAAEY,YAAY;MACnBX,WAAW,EAAEiB;IACf,CAAC;EACH;EACA,IAAId,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACjC,MAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAK,CAACO,SAAS,CAChDC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKL,MAAM,CAACK,EAAE,CACxC;IACD,MAAMU,YAAY,GAAGhB,KAAK,CAACH,KAAK,CAACM,qBAAqB,CAAC;IACvD,MAAMO,WAAW,GAAG;MAClB,GAAGM,YAAY;MACfL,QAAQ,EAAEV,MAAM,CAACU,QAAQ;MACzBC,MAAM,EAAGI,YAAY,CAACJ,MAAM,GAAGI,YAAY,CAACL,QAAQ,GAAIV,MAAM,CAACU;IACjE,CAAC;IACD,MAAMF,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAK,CAAC;IACrCY,YAAY,CAACN,qBAAqB,CAAC,GAAGO,WAAW;IACjD,MAAMK,kBAAkB,GAAGf,KAAK,CAACH,KAAK,CAACqB,MAAM,CAC3C,CAACC,GAAG,EAAEZ,IAAI,KAAKY,GAAG,GAAGZ,IAAI,CAACK,MAAM,EAChC,CAAC,CACF;IACD,OAAO;MACLf,KAAK,EAAEY,YAAY;MACnBX,WAAW,EAAEiB;IACf,CAAC;EACH;EACA,OAAOnB,gBAAgB;AACzB,CAAC;AAED,MAAMwB,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGhC,UAAU,CAChDO,WAAW,EACXH,gBAAgB,CACjB;EAED,MAAM6B,aAAa,GAAIlB,IAAI,IAAK;IAC9BiB,kBAAkB,CAAC;MAAEtB,IAAI,EAAE,UAAU;MAAEK,IAAI,EAAEA;IAAK,CAAC,CAAC;EACtD,CAAC;EAED,MAAMmB,kBAAkB,GAAIpB,EAAE,IAAK;IACjCkB,kBAAkB,CAAC;MAAEtB,IAAI,EAAE,aAAa;MAAEI,EAAE,EAAEA;IAAG,CAAC,CAAC;EACrD,CAAC;EAED,MAAMqB,cAAc,GAAGA,CAACrB,EAAE,EAAEK,QAAQ,KAAK;IACvCa,kBAAkB,CAAC;MAAEtB,IAAI,EAAE,aAAa;MAAEI,EAAE,EAAEA,EAAE;MAAEK,QAAQ,EAAEA;IAAS,CAAC,CAAC;EACzE,CAAC;EAED,MAAMiB,WAAW,GAAG;IAClB/B,KAAK,EAAE0B,SAAS,CAAC1B,KAAK;IACtBC,WAAW,EAAEyB,SAAS,CAACzB,WAAW;IAClC+B,OAAO,EAAEJ,aAAa;IACtBK,UAAU,EAAEJ,kBAAkB;IAC9BC,cAAc,EAAEA;EAClB,CAAC;EAED,oBACEhC,OAAA,CAACF,WAAW,CAACsC,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACtCZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAE3B,CAAC;AAACf,EAAA,CA/BIF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}