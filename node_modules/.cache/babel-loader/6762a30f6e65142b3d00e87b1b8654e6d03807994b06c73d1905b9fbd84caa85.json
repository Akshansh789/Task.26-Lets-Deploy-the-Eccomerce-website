{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaha\\\\Downloads\\\\react-bootstrap-ecomm\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { appContext } from '../../Store/Context';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  let history = useHistory();\n  let ctx = useContext(appContext);\n  const [isLogin, setIsLogIn] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const switchAuthModeHandler = () => {\n    setIsLogIn(prevState => !prevState);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    if (isLogin) {\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByOrvUk-TKCvmY39IHjB_EQvxRkvKF3Wc', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(ctx);\n        setIsLoading(false);\n        if (res.ok) {\n          let responce = res.json();\n          responce.then(data => {\n            console.log(\"idTOken:\", data.idToken);\n            ctx.setToken(data.idToken);\n            ctx.setIsLoggedIn(true);\n            history.push('/profile');\n          });\n        } else {\n          console.log(res);\n          return res.json().then(data => {\n            let errorMessage = 'Authentication failed!';\n            alert(errorMessage);\n          });\n        }\n      });\n    } else {\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByOrvUk-TKCvmY39IHjB_EQvxRkvKF3Wc', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n          let responce = res.json();\n          responce.then(data => {\n            console.log(\"idTOken:\", data.idToken);\n            ctx.setToken(data.idToken);\n            console.log(ctx);\n            ctx.isLoggedin(true);\n          });\n        } else {\n          return res.json().then(data => {\n            let errorMessage = 'Authentication failed!';\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"pqtpBDQfMaFbZ0m+zQzH+tho+/g=\", false, function () {\n  return [useHistory];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","useHistory","appContext","classes","jsxDEV","_jsxDEV","AuthForm","_s","history","ctx","isLogin","setIsLogIn","emailInputRef","passwordInputRef","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","console","log","ok","responce","json","data","idToken","setToken","setIsLoggedIn","push","errorMessage","alert","isLoggedin","className","auth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","control","htmlFor","type","id","required","ref","actions","style","color","toggle","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chaha/Downloads/react-bootstrap-ecomm/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { appContext } from '../../Store/Context';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n\n  let history=useHistory();\n  let ctx=useContext(appContext);\n  const [isLogin, setIsLogIn] = useState(false);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n \n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogIn((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);   \n    if (isLogin) {\n      fetch(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByOrvUk-TKCvmY39IHjB_EQvxRkvKF3Wc',\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      ).then((res) => {\n        console.log(ctx);\n        setIsLoading(false);\n        if (res.ok) {\n         let responce=res.json();\n         responce.then((data)=>{\n          console.log(\"idTOken:\",data.idToken);\n          ctx.setToken(data.idToken);\n          ctx.setIsLoggedIn(true);\n          history.push('/profile')\n        })\n        } else {\n        console.log(res)\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed!';\n            alert(errorMessage);\n          });\n        }\n      });\n\n    } else {\n      fetch(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByOrvUk-TKCvmY39IHjB_EQvxRkvKF3Wc',\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      ).then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          let responce=res.json();\n         responce.then((data)=>{\n          console.log(\"idTOken:\",data.idToken);\n          ctx.setToken(data.idToken);\n          console.log(ctx);\n          ctx.isLoggedin(true);\n        })\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed!';\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p style={{color:\"white\"}}>Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AACpD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,IAAIC,OAAO,GAACP,UAAU,EAAE;EACxB,IAAIQ,GAAG,GAACT,UAAU,CAACE,UAAU,CAAC;EAC9B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,aAAa,GAAGb,MAAM,EAAE;EAC9B,MAAMc,gBAAgB,GAAGd,MAAM,EAAE;EAGjC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMkB,qBAAqB,GAAGA,CAAA,KAAM;IAClCL,UAAU,CAAEM,SAAS,IAAK,CAACA,SAAS,CAAC;EACvC,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,YAAY,GAAGT,aAAa,CAACU,OAAO,CAACC,KAAK;IAChD,MAAMC,eAAe,GAAGX,gBAAgB,CAACS,OAAO,CAACC,KAAK;;IAEtD;;IAEAR,YAAY,CAAC,IAAI,CAAC;IAClB,IAAIL,OAAO,EAAE;MACXe,KAAK,CACH,mHAAmH,EACnH;QACEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAET,YAAY;UACnBU,QAAQ,EAAEP,eAAe;UACzBQ,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CACF,CAACC,IAAI,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC5B,GAAG,CAAC;QAChBM,YAAY,CAAC,KAAK,CAAC;QACnB,IAAIoB,GAAG,CAACG,EAAE,EAAE;UACX,IAAIC,QAAQ,GAACJ,GAAG,CAACK,IAAI,EAAE;UACvBD,QAAQ,CAACL,IAAI,CAAEO,IAAI,IAAG;YACrBL,OAAO,CAACC,GAAG,CAAC,UAAU,EAACI,IAAI,CAACC,OAAO,CAAC;YACpCjC,GAAG,CAACkC,QAAQ,CAACF,IAAI,CAACC,OAAO,CAAC;YAC1BjC,GAAG,CAACmC,aAAa,CAAC,IAAI,CAAC;YACvBpC,OAAO,CAACqC,IAAI,CAAC,UAAU,CAAC;UAC1B,CAAC,CAAC;QACF,CAAC,MAAM;UACPT,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UACd,OAAOA,GAAG,CAACK,IAAI,EAAE,CAACN,IAAI,CAAEO,IAAI,IAAK;YAC/B,IAAIK,YAAY,GAAG,wBAAwB;YAC3CC,KAAK,CAACD,YAAY,CAAC;UACrB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IAEJ,CAAC,MAAM;MACLrB,KAAK,CACH,uGAAuG,EACvG;QACEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAET,YAAY;UACnBU,QAAQ,EAAEP,eAAe;UACzBQ,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CACF,CAACC,IAAI,CAAEC,GAAG,IAAK;QACdpB,YAAY,CAAC,KAAK,CAAC;QACnB,IAAIoB,GAAG,CAACG,EAAE,EAAE;UACV,IAAIC,QAAQ,GAACJ,GAAG,CAACK,IAAI,EAAE;UACxBD,QAAQ,CAACL,IAAI,CAAEO,IAAI,IAAG;YACrBL,OAAO,CAACC,GAAG,CAAC,UAAU,EAACI,IAAI,CAACC,OAAO,CAAC;YACpCjC,GAAG,CAACkC,QAAQ,CAACF,IAAI,CAACC,OAAO,CAAC;YAC1BN,OAAO,CAACC,GAAG,CAAC5B,GAAG,CAAC;YAChBA,GAAG,CAACuC,UAAU,CAAC,IAAI,CAAC;UACtB,CAAC,CAAC;QACF,CAAC,MAAM;UACL,OAAOb,GAAG,CAACK,IAAI,EAAE,CAACN,IAAI,CAAEO,IAAI,IAAK;YAC/B,IAAIK,YAAY,GAAG,wBAAwB;YAC3CC,KAAK,CAACD,YAAY,CAAC;UACrB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEzC,OAAA;IAAS4C,SAAS,EAAE9C,OAAO,CAAC+C,IAAK;IAAAC,QAAA,gBAC/B9C,OAAA;MAAA8C,QAAA,EAAKzC,OAAO,GAAG,OAAO,GAAG;IAAS;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACxClD,OAAA;MAAMmD,QAAQ,EAAEtC,aAAc;MAAAiC,QAAA,gBAC5B9C,OAAA;QAAK4C,SAAS,EAAE9C,OAAO,CAACsD,OAAQ;QAAAN,QAAA,gBAC9B9C,OAAA;UAAOqD,OAAO,EAAC,OAAO;UAAAP,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACzClD,OAAA;UAAOsD,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,OAAO;UAACC,QAAQ;UAACC,GAAG,EAAElD;QAAc;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1D,eACNlD,OAAA;QAAK4C,SAAS,EAAE9C,OAAO,CAACsD,OAAQ;QAAAN,QAAA,gBAC9B9C,OAAA;UAAOqD,OAAO,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/ClD,OAAA;UACEsD,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbC,QAAQ;UACRC,GAAG,EAAEjD;QAAiB;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNlD,OAAA;QAAK4C,SAAS,EAAE9C,OAAO,CAAC4D,OAAQ;QAAAZ,QAAA,GAC7B,CAACrC,SAAS,iBAAIT,OAAA;UAAA8C,QAAA,EAASzC,OAAO,GAAG,OAAO,GAAG;QAAgB;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAU,EACrEzC,SAAS,iBAAIT,OAAA;UAAG2D,KAAK,EAAE;YAACC,KAAK,EAAC;UAAO,CAAE;UAAAd,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eAC/DlD,OAAA;UACEsD,IAAI,EAAC,QAAQ;UACbV,SAAS,EAAE9C,OAAO,CAAC+D,MAAO;UAC1BC,OAAO,EAAEnD,qBAAsB;UAAAmC,QAAA,EAE9BzC,OAAO,GAAG,oBAAoB,GAAG;QAA6B;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAAChD,EAAA,CA5HID,QAAQ;EAAA,QAEAL,UAAU;AAAA;AAAAmE,EAAA,GAFlB9D,QAAQ;AA8Hd,eAAeA,QAAQ;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}